configurationManager {
  zookeeperConnection="adserver-configuration:2181"
  sessionTimeout=10000
  event.pushing.timeout=50
  version="${project.version}"
  environment="${profile-id}"
  fixedConfigurationPath="/#environment#/adserver/#version#/configuration/fixed"
  runtimeConfigurationPath="/#environment#/adserver/#version#/configuration/runtime"
  ephemeralNodePath="/#environment#/adserver/#version#/nodes"
}

mainExecutor {
    poolSize=10
    reconfigurationTimeout=30000 //milliseconds
}

metrics {
    reporter {
        graphite {
            enabled=false
            host={{ graphite_host }}
            port=2003
            reportFrequency=60 //seconds
            filter {
                regexp=""
            }
            hostPrefix=""
        }
        influxdb {
            enabled=false
            debugJson=false
            tagsSupport=false
            hostPrefix=""
            host=localhost
            port=8086
            database=database
            user=user
            password=password
            reportFrequency=60 //seconds
            filter {
                regexp=""
            }
        }
        jmx {
            enabled=true
            maxHistorySize=10
        }
    }
}

mainHttpService {
    ssl=false
    port=8080
    backlog=1024
    acceptorPool.size=4
    clientPool.size=4
    maxBodySize=1048576
    maxInitialLineSize=4096
    maxHeaderSize=16384
    validateHeaders=true
}

dmaService {
    hylosFile=/opt/placeiq/lib/dma.hylos
    injector {
        prefix=us_
    }
}

enrichmentInputProcessor {
    parameter {
        partnerId=MI
        applicationId=AI
        deviceId=[AD,AH,AM,IA,IS,IM,DS,DM,AN,GR,GS,GM]
        deviceIdTypes=[AD,AH,AM,IA,IS,IM,DS,DM,AN,GR,GS,GM]
        coordinates {
            latitude=LT
            longitude=LG
            latitudeMin=-80
            latitudeMax=84
            longitudeMin=-180
            longitudeMax=180
        }
        tile=tile
        timestamp=timestamp
        timePeriod=timeperiod
        adUnit=SI
    }
}

gatewayInputProcessor {
    parameter {
        partnerId=PT
        applicationId=AP
        deviceId=[AD,AH,AM,IA,IS,IM,DS,DM,AN,GR,GS,GM]
        deviceIdTypes=[AD,AH,AM,IA,IS,IM,DS,DM,AN,GR,GS,GM]
        deviceUserAgent=UA
        deviceSubModel=MD
        ip=IP
        coordinates {
            latitude=LT
            longitude=LG
            latitudeMin=-80
            latitudeMax=84
            longitudeMin=-180
            longitudeMax=180
        }
        adUnit=AU
        adTypes=AT
        adSize=SZ
        adExclusionCategories=EC
        returnType=ST
    }
}

gatewayOutputProcessor {
    dtdXmlAdUrl="http://ads.placeiq.com/2/ad/placeiq_ad_response.dtd"
    dtdXmlNoAdUrl="http://ads.placeiq.com/2/ad/placeiq_no_ad_response.dtd"
}

enrichment {
    aerospikeClientService {
        host={{ aerospike_host }}
        port=3000
        async.maxCommands=1
        async.selectorThreads=1
        read.maxRetries=0
        read.sleepBetweenRetries=0
        read.priority=DEFAULT
        write.maxRetries=0
        write.sleepBetweenRetries=0
        write.priority=DEFAULT
        write.ttl=0
        write.recordExistsAction=UPDATE
        batch.maxRetries=0
        batch.sleepBetweenRetries=0
        batch.priority=DEFAULT
        batch.maxConcurrentThreads=1
        query.priority=DEFAULT
        query.maxConcurrentNodes=0
    }
    service {
        namespace=enricher
        segmentBin=s
        useAllDeviceIds=true
        exposeAudience=[EXP,EXP1]
        controlAudience=[ABC,ABC1]
    }
}

dfp {
    cipherEncryptor {
        trustKey=j34r32j0dj8902349rf23dkd
        cipherPool.size=10
        cipherType=AES/ECB/PKCS5Padding
        keyType=AES
    }
    httpClientService {
        alwaysTrustSSL=false
        pool.maxConnections=10
        pool.maxConnectionsPerRoute=1
        pool.keepAlive=60000
        pool.connect.timeout=90
        pool.socket.timeout=90
    }
    uriBuilder {
        default {
            whiteListing.enabled=true
            userAgentFromParam=false
            frequencyCapping.level=2
            networkId=51024290
            url="http://{{ url_dfp }}/gampad/adx"
            shuffleAudiences=true
        }
        vast {
            userAgentFromParam=false
            networkId=51024290
            url="http://{{ url_dfp }}/gampad/ads"
            shuffleAudiences=true
            adSize.replace=true
            adSize.default=640x480
        }
        shortening {
            truncateToMaxUrlLength=true
            maxUrlLength=8192
        }
    }
}

dfpClientService {
    userAgentFromParam=false
    userAgent=PIQ_DFP_0.1
}

openRtb {
    moPub.biddingService {
        nUrl="http://{{ openrtb_url }}/i/?RI=${REQUEST_ID}&RAI=${AUCTION_ID}&RABDI=${AUCTION_BID_ID}&RAII=${AUCTION_IMP_ID}&RASI=${AUCTION_SEAT_ID}&RAAI=${AUCTION_AD_ID}&RAP=${AUCTION_PRICE}"
        seat=placeiq
    }
    bidSwitch.biddingService {
        nUrl="http://{{ openrtb_url }}/i/?RI=${REQUEST_ID}&RAP=${AUCTION_PRICE}"
        vastUrl="http://{{ openrtb_url }}/vast/?RI=${REQUEST_ID}"
        seat=68
    }
}

gatewayEndpoint {
    processing.timeout=5000000000 //nanoseconds
}

openRtb {
    bidSwitchEndpoint.processing.timeout=5000000000 //nanoseconds
    moPubEndpoint.processing.timeout=5000000000 //nanoseconds
}

enrichmentEndpoint {
    processing.timeout=5000000000 //nanoseconds
}

versionEndpoint {
    processing.timeout=5000000000 //nanoseconds
}

readyEndpoint {
    processing.timeout=5000000000 //nanoseconds
    response.body=1
}

simpleAuthorizationService {
    auth.key {
        name=sessionId
        value=secret-key
    }
    routes=[
        {
            route=/ping
            methods=[POST]
        }
        {
            route=/metrics
            methods=[GET]
        }
    ]
}

pingEndpoint {
    processing.timeout=5000000000 //nanoseconds
    online=true
    parameters.online=online
    response.online=pong
    response.offline=offline
}

metricsEndpoint {
    processing.timeout=5000000000 //nanoseconds
    rateUnit=seconds
    durationUnit=seconds
    showSamples=false
}

checkEndpoint {
  processing.timeout=5000000000 //nanoseconds
}
